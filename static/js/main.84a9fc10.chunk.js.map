{"version":3,"sources":["componets/ContactList/ContactList.module.css","componets/Filter/Filter.module.css","redux/contacts/contacts-actions.jsx","componets/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.jsx","componets/ContactList/ContactList.jsx","componets/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.jsx","redux/store.jsx","index.js","componets/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deliteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","nameInputId","numberInputId","onSubmit","event","preventDefault","contactsActions","className","s","form","title","htmlFor","type","value","onChange","target","pattern","required","input","btn","getFilter","state","contacts","filter","getVisibleContacts","items","getContacts","normalezedFilter","toLowerCase","toLocaleLowerCase","includes","ContactList","useSelector","list","map","item","onClick","onDeletContacts","Filter","App","createReducer","actions","find","alert","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.84a9fc10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__gG8fL\",\"item\":\"ContactList_item__LaB2A\",\"btn\":\"ContactList_btn__1hW87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2J84L\",\"input\":\"Filter_input__2iBNk\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('App/contactAdd', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deliteContact = createAction('App/contactDelete');\r\nconst changeFilter = createAction('App/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deliteContact, changeFilter };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const changeName = event => setName(event.target.value);\r\n  const changeNumber = event => setNumber(event.target.value);\r\n\r\n  const handleSabmit = event => {\r\n    event.preventDefault();\r\n\r\n    dispatch(contactsActions.addContact({ name, number }));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSabmit} className={s.form}>\r\n      <p className={s.title}>Name</p>\r\n      <label htmlFor={nameInputId}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={changeName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          id={nameInputId}\r\n          required\r\n          className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <p className={s.title}>Number</p>\r\n      <label htmlFor={numberInputId}>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={changeNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          id={numberInputId}\r\n          required\r\n          className={s.input + ' ' + s.number}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","export const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalezedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(normalezedFilter),\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeletContacts = id => dispatch(contactsActions.deliteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p>{name}:</p>\r\n          <p>{number}</p>\r\n          <button onClick={() => onDeletContacts(id)} className={s.btn}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label htmlFor=\"\">\r\n      <p className={s.title}>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(contactsActions.changeFilter(event.target.value))\r\n        }\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\n\nimport ContactForm from './componets/ContactForm';\nimport ContactList from './componets/ContactList';\nimport Filter from './componets/Filter';\n\nimport './index.css';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.addContact]: (state, { payload }) => {\r\n      if (state.find(({ name }) => name === payload.name)) {\r\n        alert(`${payload.name} is already in contacts.`);\r\n      } else {\r\n        return [...state, payload];\r\n      }\r\n    },\r\n    [actions.deliteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1LIEH\",\"input\":\"ContactForm_input__2Zm5H\",\"number\":\"ContactForm_number__3n01f\",\"btn\":\"ContactForm_btn__p4ZPG\",\"title\":\"ContactForm_title__FNUyy\"};"],"sourceRoot":""}